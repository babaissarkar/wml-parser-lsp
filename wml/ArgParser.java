package wml;

import java.io.InputStream;
import java.io.PrintStream;
import java.nio.file.Files;
import java.nio.file.Path;

public class ArgParser {
	public boolean showLogs = false;
	public boolean showParseLogs = false;
	public boolean warnParseLogs = false;
	public Path dataPath;
	public InputStream in = null;
	public PrintStream out = null;
	
	// TODO this should be autogenerated
	private final String USAGE_STRING = """
		Usage: Preprocessor [-datadir|-log|-log-t[oken]|-log-p[arse]|-warn-p[arse]|-i[nput] filename|-o[utput] filename|-help|-?]
		Options:
			-datadir               Absolute Path to Wesnoth's data directory
			-log                   Print all logs (parser and tokenizer)
			-log-parse/-log-p      Print all parser logs
			-log-token/-log-t      Print all tokenizer logs
			-warn-parse/-warn-p    Print parser warnings only
			-input/-i filename     Preprocess given file
			-output/-o filename    Write output to given file
			-help/-?               Print this help""";
	
	public void parseArgs(String[] args) {
		for (int i = 0; i < args.length; i++) {
			String arg = args[i];
			if (arg.startsWith("--")) {
				arg = arg.substring(2, arg.length());
			} else if (arg.startsWith("-") || arg.startsWith("/")) {
				arg = arg.substring(1, arg.length());
			}
			
			switch(arg) {
				case "datadir" -> { dataPath = Path.of(args[++i]); }
				case "help","?" -> System.out.println(USAGE_STRING);
				case "i", "input" -> {
					try {
						in = Files.newInputStream(Path.of(args[++i]));
					} catch (Exception e) {
						e.printStackTrace();
					}
				}
				case "log" -> { showLogs = true; showParseLogs = true; }
				case "log-token", "log-t" -> showLogs = true;
				case "log-parse", "log-p" -> showParseLogs = true;
				case "warn-parse", "warn-p" -> warnParseLogs = true;
				case "o", "output" -> {
					try {
						out = new PrintStream(Path.of(args[++i]).toFile());
					} catch (Exception e) {
						e.printStackTrace();
					}
				}
			}
		}
	}
}
